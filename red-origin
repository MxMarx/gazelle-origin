#!/usr/bin/env python3
import argparse
import os
import re
import sys
from redorigin import RedactedAPI, RedactedAPIError

ERR_HASH=3
ERR_COOKIE=8
EXIT_CODES = {
    'music': 4,
    'login': 5,
    'request': 6,
    'request-json': 7,
}

cookie = os.environ.get('RED_COOKIE')
if not cookie:
    print('RED_COOKIE environment variable not set.', file=sys.stderr)
    sys.exit(ERR_COOKIE)

formatter_class = argparse.RawDescriptionHelpFormatter
parser = argparse.ArgumentParser(description='Fetches torrent origin information from redacted.ch', formatter_class=formatter_class)
parser.add_argument('id', help='torrent identifier, which can be either its info hash, torrent ID, or permalink')
parser.add_argument('--out', '-o', help='path to write origin data (default: print to stdout)', metavar='file')

args = parser.parse_args()

try:
    api = RedactedAPI(cookie)

    if re.match(r'^[\da-fA-F]{40}$', args.id):
        info = api.get_torrent_info(hash=args.id)
    elif re.match(r'^\d+$', args.id):
        info = api.get_torrent_info(id=args.id)
    else:
        match = re.match(r'.*torrentid=(\d+)', args.id)
        if not match:
            print('Invalid torrent ID or hash', file=sys.stderr)
            sys.exit(ERR_HASH)
        info = api.get_torrent_info(id=match[1])
except RedactedAPIError as e:
    print(e, file=sys.stderr)
    sys.exit(EXIT_CODES[e.code])

if args.out:
    with io.open(args.out, 'w', encoding='utf-8') as f:
        f.write(info)
else:
    print(info, end="")
